{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\nagda\\\\pages\\\\home.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { userLogIn } from '../actions/test.action';\nimport iniModel from '../models/redux.state.ini';\n\nvar Page =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Page, _Component);\n\n  function Page() {\n    _classCallCheck(this, Page);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Page).apply(this, arguments));\n  }\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      console.log(this.props);\n      setTimeout(function () {\n        console.log(_this.props);\n      }, 6000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Prop from Redux \", this.props.foo), __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Prop from getInitialProps \", this.props.custom), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.props.fuckThis();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"test dispatching\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store,\n          isServer = _ref.isServer,\n          pathname = _ref.pathname,\n          query = _ref.query;\n      store.dispatch({\n        type: \"FOO\",\n        payload: \"foo\"\n      }); // component will be able to read from store's state when rendered\n\n      return {\n        custom: \"custom\"\n      }; // you can pass some custom props to component from here\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: iniModel\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fuckThis: function fuckThis(payload) {\n      return dispatch(userLogIn(payload));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","map":{"version":3,"sources":["E:/nagda/pages/home.js"],"names":["React","Component","connect","userLogIn","iniModel","Page","console","log","props","setTimeout","foo","custom","fuckThis","store","isServer","pathname","query","dispatch","type","payload","mapStateToProps","state","mapDispatchToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;IACMC,I;;;;;;;;;;;;;wCAMkB;AAAA;;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEAC,MAAAA,UAAU,CAAC,YAAI;AACXH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACC,KAAjB;AACH,OAFS,EAER,IAFQ,CAAV;AAGH;;;6BAEQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsB,KAAKA,KAAL,CAAWE,GAAjC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAgC,KAAKF,KAAL,CAAWG,MAA3C,CAFJ,EAGI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACH,KAAL,CAAWI,QAAX,EAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,CADJ;AAOH;;;0CArB0D;AAAA,UAAnCC,KAAmC,QAAnCA,KAAmC;AAAA,UAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,UAAlBC,QAAkB,QAAlBA,QAAkB;AAAA,UAARC,KAAQ,QAARA,KAAQ;AACvDH,MAAAA,KAAK,CAACI,QAAN,CAAe;AAACC,QAAAA,IAAI,EAAE,KAAP;AAAcC,QAAAA,OAAO,EAAE;AAAvB,OAAf,EADuD,CACR;;AAC/C,aAAO;AAACR,QAAAA,MAAM,EAAE;AAAT,OAAP,CAFuD,CAE5B;AAC9B;;;;EAJcV,S;;AAyBnB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHA,IAAAA,KAAK,EAACjB;AADH,GAAP;AAGH,CAJD;;AAMA,IAAMkB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAL,QAAQ,EAAI;AACnC,SAAO;AACHL,IAAAA,QAAQ,EAAE,kBAACO,OAAD;AAAA,aAAaF,QAAQ,CAACd,SAAS,CAACgB,OAAD,CAAV,CAArB;AAAA;AADP,GAAP;AAGH,CAJD;;AAKA,eAAejB,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,IAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {userLogIn} from '../actions/test.action'\r\nimport iniModel from '../models/redux.state.ini';\r\nclass Page extends Component {\r\n    static getInitialProps({store, isServer, pathname, query}) {\r\n        store.dispatch({type: \"FOO\", payload: \"foo\"}); // component will be able to read from store's state when rendered\r\n        return {custom: \"custom\"}; // you can pass some custom props to component from here\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n\r\n        setTimeout(()=>{\r\n            console.log(this.props)\r\n        },6000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Prop from Redux {this.props.foo}</div>\r\n                <div>Prop from getInitialProps {this.props.custom}</div>\r\n                <button onClick={() => this.props.fuckThis()}>test dispatching</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        state:iniModel\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fuckThis: (payload) => dispatch(userLogIn(payload))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);\r\n"]},"metadata":{},"sourceType":"module"}