{"ast":null,"code":"var _jsxFileName = \"E:\\\\nagda\\\\pages\\\\home.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { userLogIn } from '../actions/test.action';\nimport iniModel from '../models/redux.state.ini';\n\nclass Page extends Component {\n  static getInitialProps({\n    store,\n    isServer,\n    pathname,\n    query\n  }) {\n    store.dispatch({\n      type: \"FOO\",\n      payload: \"foo\"\n    }); // component will be able to read from store's state when rendered\n\n    return {\n      custom: \"custom\"\n    }; // you can pass some custom props to component from here\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    setTimeout(() => {\n      console.log(this.props);\n    }, 6000);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Prop from Redux \", this.props.foo), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Prop from getInitialProps \", this.props.custom), __jsx(\"button\", {\n      onClick: () => this.props.fuckThis(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"test dispatching\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    //state: {...iniModel, ...state},\n    state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fuckThis: payload => dispatch(userLogIn(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","map":{"version":3,"sources":["E:/nagda/pages/home.js"],"names":["React","Component","connect","userLogIn","iniModel","Page","getInitialProps","store","isServer","pathname","query","dispatch","type","payload","custom","componentDidMount","console","log","props","setTimeout","render","foo","fuckThis","mapStateToProps","state","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzB,SAAOK,eAAP,CAAuB;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,QAAlB;AAA4BC,IAAAA;AAA5B,GAAvB,EAA2D;AACvDH,IAAAA,KAAK,CAACI,QAAN,CAAe;AAACC,MAAAA,IAAI,EAAE,KAAP;AAAcC,MAAAA,OAAO,EAAE;AAAvB,KAAf,EADuD,CACR;;AAC/C,WAAO;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAP,CAFuD,CAE5B;AAC9B;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEAC,IAAAA,UAAU,CAAC,MAAM;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACH,KAFS,EAEP,IAFO,CAAV;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsB,KAAKF,KAAL,CAAWG,GAAjC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAgC,KAAKH,KAAL,CAAWJ,MAA3C,CAFJ,EAGI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKI,KAAL,CAAWI,QAAX,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,CADJ;AAOH;;AAtBwB;;AAyB7B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACH;AACAA,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGd,QAAQ,IAAI;AACnC,SAAO;AACHW,IAAAA,QAAQ,EAAGT,OAAD,IAAaF,QAAQ,CAACR,SAAS,CAACU,OAAD,CAAV;AAD5B,GAAP;AAGH,CAJD;;AAKA,eAAeX,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,IAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {userLogIn} from '../actions/test.action'\r\nimport iniModel from '../models/redux.state.ini';\r\n\r\nclass Page extends Component {\r\n    static getInitialProps({store, isServer, pathname, query}) {\r\n        store.dispatch({type: \"FOO\", payload: \"foo\"}); // component will be able to read from store's state when rendered\r\n        return {custom: \"custom\"}; // you can pass some custom props to component from here\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n\r\n        setTimeout(() => {\r\n            console.log(this.props)\r\n        }, 6000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Prop from Redux {this.props.foo}</div>\r\n                <div>Prop from getInitialProps {this.props.custom}</div>\r\n                <button onClick={() => this.props.fuckThis()}>test dispatching</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        //state: {...iniModel, ...state},\r\n        state,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fuckThis: (payload) => dispatch(userLogIn(payload))\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);\r\n"]},"metadata":{},"sourceType":"module"}