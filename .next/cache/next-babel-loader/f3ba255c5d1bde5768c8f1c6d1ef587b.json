{"ast":null,"code":"var _jsxFileName = \"E:\\\\nagda\\\\pages\\\\home.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Page extends Component {\n  static getInitialProps({\n    store,\n    isServer,\n    pathname,\n    query\n  }) {\n    store.dispatch({\n      type: \"FOO\",\n      payload: \"foo\"\n    }); // component will be able to read from store's state when rendered\n\n    return {\n      custom: \"custom\"\n    }; // you can pass some custom props to component from here\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Prop from Redux \", this.props.foo), __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Prop from getInitialProps \", this.props.custom));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);","map":{"version":3,"sources":["E:/nagda/pages/home.js"],"names":["React","Component","connect","Page","getInitialProps","store","isServer","pathname","query","dispatch","type","payload","custom","componentDidMount","console","log","props","render","foo","mapStateToProps","state","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC3B,SAAOG,eAAP,CAAuB;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,QAAnB;AAA6BC,IAAAA;AAA7B,GAAvB,EAA6D;AAC3DH,IAAAA,KAAK,CAACI,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAf,EAD2D,CACV;;AACjD,WAAO;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAP,CAF2D,CAE9B;AAC9B;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsB,KAAKD,KAAL,CAAWE,GAAjC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAgC,KAAKF,KAAL,CAAWJ,MAA3C,CAFF,CADF;AAMD;;AAhB0B;;AAmB7B,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLA,IAAAA,KAAK,EAAEA;AADF,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGZ,QAAQ,IAAI;AACrC,SAAO,EAAP;AACD,CAFD;;AAGA,eAAeP,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,IAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Page extends Component {\r\n  static getInitialProps({ store, isServer, pathname, query }) {\r\n    store.dispatch({ type: \"FOO\", payload: \"foo\" }); // component will be able to read from store's state when rendered\r\n    return { custom: \"custom\" }; // you can pass some custom props to component from here\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Prop from Redux {this.props.foo}</div>\r\n        <div>Prop from getInitialProps {this.props.custom}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    state: state\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Page);\r\n"]},"metadata":{},"sourceType":"module"}